neo4j:
  fullName: neo4j
  image:
    repository: neo4j
    tag: "5-community"
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    hostname: neo4j.k8s.lp-i.dev
  httpPort: 7474
  boltPort: 7687
  commonLabels:
    app.kubernetes.io/name: neo4j
    app.kubernetes.io/part-of: crisalid
    app.kubernetes.io/managed-by: Helm
  username: neo4j
  config:
    nonSensitive:
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
      NEO4J_PLUGINS: '[ "apoc" ]'
      NEO4J_server_memory_heap_initial__size: "512m"
      NEO4J_server_memory_heap_max__size: "2G"
      NEO4J_server_memory_pagecache_size: "1G"
      NEO4J_server_config_strict__validation_enabled: false
    sensitive:
      NEO4J_AUTH: "{{ .Values.neo4j.username }}/{{ .Values.neo4j.password }}"

apollo:
  fullName: apollo
  image:
    repository: crisalidesr/crisalid-apollo
    tag: "latest"
    pullPolicy: IfNotPresent
  httpPort: 4000
  commonLabels:
    app.kubernetes.io/name: apollo
    app.kubernetes.io/part-of: crisalid
    app.kubernetes.io/managed-by: Helm
  ingress:
    enabled: true
    hostname: apollo.k8s.lp-i.dev
  config:
    nonSensitive:
      APP_ENV: DEV
      NEO4J_URI: bolt://neo4j:{{ .Values.neo4j.boltPort }}
      NEO4J_USER: "{{ .Values.neo4j.username }}"
      ENABLE_API_KEYS: false
    sensitive:
      NEO4J_PASSWORD: "{{ .Values.neo4j.password }}"
      # API_KEYS: ${SOVISUPLUS_GRAPHQL_API_KEY}

crisalidBus:
  fullName: crisalid-bus
  username: user
  configDir: /etc/rabbitmq
  configFileName: rabbitmq.conf
  defaultPasswordHash: ccZY1+5tVHkoJbmKGXqUmY94e4DT30c/oUd2hSJMNjyhNRGj
  image:
    repository: rabbitmq
    tag: 3-management
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    hostname: crisalid-bus.k8s.lp-i.dev
  httpPort: 15672
  amqPort: 5672
  commonLabels:
    app.kubernetes.io/name: crisalid-bus
    app.kubernetes.io/part-of: crisalid
    app.kubernetes.io/managed-by: Helm
  config:
    nonSensitive:
      RABBITMQ_DEFAULT_USER: "{{ .Values.crisalidBus.username }}"
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: '-rabbit load_definitions "{{.Values.crisalidBus.configDir}}/definitions.json"'
      RABBITMQ_CONFIG_FILE: '{{ printf "%s/%s" .Values.crisalidBus.configDir .Values.crisalidBus.configFileName }}'
      # API_KEYS: ${SOVISUPLUS_GRAPHQL_API_KEY}
    sensitive:
      RABBITMQ_DEFAULT_PASS: "{{ .Values.crisalidBus.password }}"

  livenessProbe:
    exec:
      command:
        - rabbitmq-diagnostics
        - check_port_connectivity
    initialDelaySeconds: 30
    periodSeconds: 20
    timeoutSeconds: 3
    failureThreshold: 10
  readinessProbe:
    exec:
      command:
        - rabbitmq-diagnostics
        - check_port_connectivity
    initialDelaySeconds: 10
    periodSeconds: 20
    timeoutSeconds: 3
    failureThreshold: 5

ikg:
  fullName: ikg
  image:
    repository: crisalidesr/crisalid-ikg
    tag: v0.24-dev
  ingress:
    enabled: true
    hostname: ikg.k8s.lp-i.dev
  httpPort: 8000
  commonLabels:
    app.kubernetes.io/name: crisalid-ikg
    app.kubernetes.io/part-of: crisalid
    app.kubernetes.io/managed-by: Helm
  config:
    nonSensitive:
      APP_ENV: DEV
      API_PREFIX: /api
      API_VERSION: v1
      AMQP_ENABLED: true
      AMQP_HOST: "{{ .Values.crisalidBus.fullName }}"
      AMQP_PORT: "{{ .Values.crisalidBus.amqPort }}"
      AMQP_USER: "{{ .Values.crisalidBus.username }}"
      NEO4J_URI: bolt://neo4j:{{ .Values.neo4j.boltPort }}
      NEO4J_USER: "{{ .Values.neo4j.username }}"
      ES_ENABLED: false
      ORG_REGISTRY_URL: http://whatever:3000
    sensitive:
      AMQP_PASSWORD: "{{ .Values.crisalidBus.password }}"
      NEO4J_PASSWORD: "{{ .Values.neo4j.password }}"

harvester:
  dbName: crisalid_harvester
  dbUser: crisalid
  dbHost: dev-lab-projects-backend.postgres.database.azure.com
  redisHost: redis://crisalid-harvester:6379
  ui:
    fullName: harvester-ui
    image:
      repository: crisalidesr/svp-harvester
      tag: latest
    httpPort: 8000
    commonLabels:
      app.kubernetes.io/name: harvester-ui
      app.kubernetes.io/part-of: crisalid
      app.kubernetes.io/managed-by: Helm
    ingress:
      enabled: true
      hostname: harvester-ui.k8s.lp-i.dev
    command: ["/bin/bash", "-c", "uvicorn app.main:app --host 0.0.0.0 --port 8000"]
    config:
      nonSensitive:
        APP_ENV: DEV
        API_HOST: "{{.Values.harvester.ui.ingress.hostname }}"
        API_PREFIX: /api
        API_VERSION: v1
        AMQP_ENABLED: false
        DB_NAME: "{{ .Values.harvester.dbName }}"
        DB_USER: "{{ .Values.harvester.dbUser }}"
        REDIS_URL: "{{ .Values.harvester.redisHost }}"
        # SCANR_ES_HOST: "{{ .Values.harvester.scanrEsHost }}"
        # SCANR_ES_USER: "{{ .Values.harvester.scanrEsUser }}"
        # SVP_JEL_PROXY_URL: http://svp-jel-proxy:3030/jel/sparql
      sensitive:
        SCANR_ES_PASSWORD: "{{ .Values.harvester.scanrEsPassword }}"
        DB_PASSWORD: "{{ .Values.harvester.dbPassword }}"
  worker:
    fullName: harvester-worker
    image:
      repository: crisalidesr/svp-harvester
      tag: latest
    commonLabels:
      app.kubernetes.io/name: harvester-worker
      app.kubernetes.io/part-of: crisalid
      app.kubernetes.io/managed-by: Helm
    command: ["bash", "-c", "alembic upgrade head && python -m app.amqp_listen"]
    config:
      nonSensitive:
        APP_ENV: DEV
        DB_HOST: harvester-db
        DB_PORT: 5432
        DB_NAME: "{{ .Values.harvester.dbName }}"
        DB_USER: "{{ .Values.harvester.dbUser }}"
        REDIS_URL: "{{ .Values.harvester.redisHost }}"
        AMQP_ENABLED: true
        AMQP_HOST: crisalid-bus
        AMQP_PORT: "{{ .Values.crisalidBus.amqPort }}"
        AMQP_USER: "{{ .Values.crisalidBus.username }}"
        INNER_TASK_PARALLELISM_LIMIT: 20
        INNER_TASK_QUEUE_LENGTH: 20
        # SCANR_ES_HOST: "{{ .Values.harvester.scanrEsHost }}"
        # SCANR_ES_USER: "{{ .Values.harvester.scanrEsUser }}"
        # SVP_JEL_PROXY_URL: http://svp-jel-proxy:3030/jel/sparql
      sensitive:
        DB_PASSWORD: "{{ .Values.harvester.dbPassword }}"
        AMQP_PASSWORD: "{{ .Values.crisalidBus.password }}"
